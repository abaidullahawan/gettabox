<% @retry_job.each do |job_status| %>
  <tr class="cursor-pointer header">
    <td class="text-center"><%= job_status.name %></td>
    <td class="text-center"><%= job_status.updated_at.strftime("%m/%d/%Y %H:%M")%></td>
    <td class="text-center"><%= job_status.perform_in.nil? ? job_status.created_at.strftime("%m/%d/%Y %H:%M") : (job_status.created_at + job_status.perform_in&.seconds)&.strftime("%m/%d/%Y %H:%M") %></td>
    <td class="text-center">
      <% job_status&.arguments&.each do |arg| %>
        <b><%= arg.first %></b> : <%= arg.last %>
        <br>
      <% end %>
    </td>
    <td class="text-center"><%= job_status.status %></td>
    <% seconds = Time.now() - job_status.created_at %>
    <td class="text-center"><span class="created_at_time"><%=  JobStatus.sec_to_hours( Time.now - job_status.updated_at - 5.minutes )  %></span><div class="countdown"></div><button class="btn btn-danger">Cancel</button></td>
  </tr>
  <tr class="content-job-status">
    <th class="text-center" style="background-color: #ccffcc" colspan="3">Status</th>
    <th style="background-color: #ccffcc" colspan="2">Time</th>
  </tr>
  <% job_status.versions.each do |log| %>
    <tr class="content-job-status">
      <% next unless log.changeset.include? 'status' %>

      <td class="text-center" style="background-color: #e6ffe6;" colspan="3"><%= log.changeset[:status][1] %></td>
      <td style="background-color: #e6ffe6;" colspan="2"><%= log.changeset[:updated_at][1].strftime("%m/%d/%Y %H:%M") %></td>
    </tr>
  <% end %>
<% end %>
</table>
</div>

<div class='float-right'>
  <%= page_entries_info @retry_job %>
</div><br>
<div class="pagination justify-content-center mt-3">
  <%= paginate @retry_job,theme: "twitter-bootstrap-4",pagination_class: "pagination-sm",nav_class: "d-inline-b" %>
</div>

<%# <script type="text/javascript">
var timer2 = $('.created_at_time').text();
var interval = setInterval(function() {
  timer2 = $('.created_at_time').text()
  var timer = timer2.split(':');
  //by parsing integer, I avoid all extra string processing
  var minutes = parseInt(timer[0], 10);
  var seconds = parseInt(timer[1], 10);
  --seconds;
  minutes = (seconds < 0) ? --minutes : minutes;
  if (minutes < 0) clearInterval(interval);
  seconds = (seconds < 0) ? 59 : seconds;
  seconds = (seconds < 10) ? '0' + seconds : seconds;
  //minutes = (minutes < 10) ?  minutes : minutes;
  $('.countdown').html(minutes + ':' + seconds);
  timer2 = minutes + ':' + seconds;
}, 1000);
</script> %>